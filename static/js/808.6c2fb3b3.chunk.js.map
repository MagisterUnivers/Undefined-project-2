{"version":3,"file":"static/js/808.6c2fb3b3.chunk.js","mappings":"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","sources":["../node_modules/@react-stately/utils/dist/packages/@react-stately/utils/src/useControlledState.ts","../node_modules/@react-stately/calendar/dist/packages/@react-stately/calendar/src/utils.ts","../node_modules/@react-stately/calendar/dist/packages/@react-stately/calendar/src/useCalendarState.ts","pages/CalendarPage/CalendarPage.jsx","pages/CalendarPage/useCalendar/useCalendar.js"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useCallback, useRef, useState} from 'react';\n\nexport function useControlledState<T>(\n  value: T,\n  defaultValue: T,\n  onChange: (value: T, ...args: any[]) => void\n): [T, (value: T, ...args: any[]) => void]  {\n  let [stateValue, setStateValue] = useState(value || defaultValue);\n  let ref = useRef(value !== undefined);\n  let wasControlled = ref.current;\n  let isControlled = value !== undefined;\n  // Internal state reference for useCallback\n  let stateRef = useRef(stateValue);\n  if (wasControlled !== isControlled) {\n    console.warn(`WARN: A component changed from ${wasControlled ? 'controlled' : 'uncontrolled'} to ${isControlled ? 'controlled' : 'uncontrolled'}.`);\n  }\n\n  ref.current = isControlled;\n\n  let setValue = useCallback((value, ...args) => {\n    let onChangeCaller = (value, ...onChangeArgs) => {\n      if (onChange) {\n        if (!Object.is(stateRef.current, value)) {\n          onChange(value, ...onChangeArgs);\n        }\n      }\n      if (!isControlled) {\n        stateRef.current = value;\n      }\n    };\n\n    if (typeof value === 'function') {\n      console.warn('We can not support a function callback. See Github Issues for details https://github.com/adobe/react-spectrum/issues/2320');\n      // this supports functional updates https://reactjs.org/docs/hooks-reference.html#functional-updates\n      // when someone using useControlledState calls setControlledState(myFunc)\n      // this will call our useState setState with a function as well which invokes myFunc and calls onChange with the value from myFunc\n      // if we're in an uncontrolled state, then we also return the value of myFunc which to setState looks as though it was just called with myFunc from the beginning\n      // otherwise we just return the controlled value, which won't cause a rerender because React knows to bail out when the value is the same\n      let updateFunction = (oldValue, ...functionArgs) => {\n        let interceptedValue = value(isControlled ? stateRef.current : oldValue, ...functionArgs);\n        onChangeCaller(interceptedValue, ...args);\n        if (!isControlled) {\n          return interceptedValue;\n        }\n        return oldValue;\n      };\n      setStateValue(updateFunction);\n    } else {\n      if (!isControlled) {\n        setStateValue(value);\n      }\n      onChangeCaller(value, ...args);\n    }\n  }, [isControlled, onChange]);\n\n  // If a controlled component's value prop changes, we need to update stateRef\n  if (isControlled) {\n    stateRef.current = value;\n  } else {\n    value = stateValue;\n  }\n\n  return [value, setValue];\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport {\n  CalendarDate,\n  DateDuration,\n  maxDate,\n  minDate,\n  startOfMonth,\n  startOfWeek,\n  startOfYear,\n  toCalendarDate\n} from '@internationalized/date';\nimport {DateValue} from '@react-types/calendar';\n\nexport function isInvalid(date: DateValue, minValue: DateValue, maxValue: DateValue) {\n  return (minValue != null && date.compare(minValue) < 0) ||\n    (maxValue != null && date.compare(maxValue) > 0);\n}\n\nexport function alignCenter(date: CalendarDate, duration: DateDuration, locale: string, minValue?: DateValue, maxValue?: DateValue) {\n  let halfDuration: DateDuration = {};\n  for (let key in duration) {\n    halfDuration[key] = Math.floor(duration[key] / 2);\n    if (halfDuration[key] > 0 && duration[key] % 2 === 0) {\n      halfDuration[key]--;\n    }\n  }\n\n  let aligned = alignStart(date, duration, locale).subtract(halfDuration);\n  return constrainStart(date, aligned, duration, locale, minValue, maxValue);\n}\n\nexport function alignStart(date: CalendarDate, duration: DateDuration, locale: string, minValue?: DateValue, maxValue?: DateValue) {\n  // align to the start of the largest unit\n  let aligned = date;\n  if (duration.years) {\n    aligned = startOfYear(date);\n  } else if (duration.months) {\n    aligned = startOfMonth(date);\n  } else if (duration.weeks) {\n    aligned = startOfWeek(date, locale);\n  }\n\n  return constrainStart(date, aligned, duration, locale, minValue, maxValue);\n}\n\nexport function alignEnd(date: CalendarDate, duration: DateDuration, locale: string, minValue?: DateValue, maxValue?: DateValue) {\n  let d = {...duration};\n  // subtract 1 from the smallest unit\n  if (duration.days) {\n    d.days--;\n  } else if (duration.weeks) {\n    d.weeks--;\n  } else if (duration.months) {\n    d.months--;\n  } else if (duration.years) {\n    d.years--;\n  }\n\n  let aligned = alignStart(date, duration, locale).subtract(d);\n  return constrainStart(date, aligned, duration, locale, minValue, maxValue);\n}\n\nexport function constrainStart(\n  date: CalendarDate,\n  aligned: CalendarDate,\n  duration: DateDuration,\n  locale: string,\n  minValue: DateValue,\n  maxValue: DateValue) {\n  if (minValue && date.compare(minValue) >= 0) {\n    aligned = maxDate(\n      aligned,\n      alignStart(toCalendarDate(minValue), duration, locale)\n    );\n  }\n\n  if (maxValue && date.compare(maxValue) <= 0) {\n    aligned = minDate(\n      aligned,\n      alignEnd(toCalendarDate(maxValue), duration, locale)\n    );\n  }\n\n  return aligned;\n}\n\nexport function constrainValue(date: CalendarDate, minValue: DateValue, maxValue: DateValue) {\n  if (minValue) {\n    date = maxDate(date, toCalendarDate(minValue));\n  }\n\n  if (maxValue) {\n    date = minDate(date, toCalendarDate(maxValue));\n  }\n\n  return date;\n}\n\nexport function previousAvailableDate(date: CalendarDate, minValue: DateValue, isDateUnavailable: (date: CalendarDate) => boolean) {\n  if (!isDateUnavailable) {\n    return date;\n  }\n\n  while (date.compare(minValue) >= 0 && isDateUnavailable(date)) {\n    date = date.subtract({days: 1});\n  }\n\n  if (date.compare(minValue) >= 0) {\n    return date;\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {alignCenter, alignEnd, alignStart, constrainStart, constrainValue, isInvalid, previousAvailableDate} from './utils';\nimport {\n  Calendar,\n  CalendarDate,\n  DateDuration,\n  DateFormatter,\n  endOfMonth,\n  endOfWeek,\n  getDayOfWeek,\n  GregorianCalendar,\n  isSameDay,\n  startOfMonth,\n  startOfWeek,\n  toCalendar,\n  toCalendarDate,\n  today\n} from '@internationalized/date';\nimport {CalendarProps, DateValue} from '@react-types/calendar';\nimport {CalendarState} from './types';\nimport {useControlledState} from '@react-stately/utils';\nimport {useMemo, useRef, useState} from 'react';\n\nexport interface CalendarStateOptions<T extends DateValue = DateValue> extends CalendarProps<T> {\n  /** The locale to display and edit the value according to. */\n  locale: string,\n  /**\n   * A function that creates a [Calendar](../internationalized/date/Calendar.html)\n   * object for a given calendar identifier. Such a function may be imported from the\n   * `@internationalized/date` package, or manually implemented to include support for\n   * only certain calendars.\n   */\n  createCalendar: (name: string) => Calendar,\n  /**\n   * The amount of days that will be displayed at once. This affects how pagination works.\n   * @default {months: 1}\n   */\n  visibleDuration?: DateDuration,\n  /** Determines how to align the initial selection relative to the visible date range. */\n  selectionAlignment?: 'start' | 'center' | 'end'\n}\n\n/**\n * Provides state management for a calendar component.\n * A calendar displays one or more date grids and allows users to select a single date.\n */\nexport function useCalendarState<T extends DateValue = DateValue>(props: CalendarStateOptions<T>): CalendarState {\n  let defaultFormatter = useMemo(() => new DateFormatter(props.locale), [props.locale]);\n  let resolvedOptions = useMemo(() => defaultFormatter.resolvedOptions(), [defaultFormatter]);\n  let {\n    locale,\n    createCalendar,\n    visibleDuration = {months: 1},\n    minValue,\n    maxValue,\n    selectionAlignment,\n    isDateUnavailable\n  } = props;\n\n  let calendar = useMemo(() => createCalendar(resolvedOptions.calendar), [createCalendar, resolvedOptions.calendar]);\n\n  let [value, setControlledValue] = useControlledState<DateValue>(props.value, props.defaultValue, props.onChange);\n  let calendarDateValue = useMemo(() => value ? toCalendar(toCalendarDate(value), calendar) : null, [value, calendar]);\n  let timeZone = useMemo(() => value && 'timeZone' in value ? value.timeZone : resolvedOptions.timeZone, [value, resolvedOptions.timeZone]);\n  let focusedCalendarDate = useMemo(() => (\n    props.focusedValue\n      ? constrainValue(toCalendar(toCalendarDate(props.focusedValue), calendar), minValue, maxValue)\n      : undefined\n  ), [props.focusedValue, calendar, minValue, maxValue]);\n  let defaultFocusedCalendarDate = useMemo(() => (\n    constrainValue(\n      props.defaultFocusedValue\n        ? toCalendar(toCalendarDate(props.defaultFocusedValue), calendar)\n        : calendarDateValue || toCalendar(today(timeZone), calendar),\n      minValue,\n      maxValue\n    )\n  ), [props.defaultFocusedValue, calendarDateValue, timeZone, calendar, minValue, maxValue]);\n  let [focusedDate, setFocusedDate] = useControlledState(focusedCalendarDate, defaultFocusedCalendarDate, props.onFocusChange);\n  let [startDate, setStartDate] = useState(() => {\n    switch (selectionAlignment) {\n      case 'start':\n        return alignStart(focusedDate, visibleDuration, locale, minValue, maxValue);\n      case 'end':\n        return alignEnd(focusedDate, visibleDuration, locale, minValue, maxValue);\n      case 'center':\n      default:\n        return alignCenter(focusedDate, visibleDuration, locale, minValue, maxValue);\n    }\n  });\n  let [isFocused, setFocused] = useState(props.autoFocus || false);\n\n  let endDate = useMemo(() => {\n    let duration = {...visibleDuration};\n    if (duration.days) {\n      duration.days--;\n    } else {\n      duration.days = -1;\n    }\n    return startDate.add(duration);\n  }, [startDate, visibleDuration]);\n\n  // Reset focused date and visible range when calendar changes.\n  let lastCalendarIdentifier = useRef(calendar.identifier);\n  if (calendar.identifier !== lastCalendarIdentifier.current) {\n    let newFocusedDate = toCalendar(focusedDate, calendar);\n    setStartDate(alignCenter(newFocusedDate, visibleDuration, locale, minValue, maxValue));\n    setFocusedDate(newFocusedDate);\n    lastCalendarIdentifier.current = calendar.identifier;\n  }\n\n  if (isInvalid(focusedDate, minValue, maxValue)) {\n    // If the focused date was moved to an invalid value, it can't be focused, so constrain it.\n    setFocusedDate(constrainValue(focusedDate, minValue, maxValue));\n  } else if (focusedDate.compare(startDate) < 0) {\n    setStartDate(alignEnd(focusedDate, visibleDuration, locale, minValue, maxValue));\n  } else if (focusedDate.compare(endDate) > 0) {\n    setStartDate(alignStart(focusedDate, visibleDuration, locale, minValue, maxValue));\n  }\n\n  // Sets focus to a specific cell date\n  function focusCell(date: CalendarDate) {\n    date = constrainValue(date, minValue, maxValue);\n    setFocusedDate(date);\n  }\n\n  function setValue(newValue: CalendarDate) {\n    if (!props.isDisabled && !props.isReadOnly) {\n      newValue = constrainValue(newValue, minValue, maxValue);\n      newValue = previousAvailableDate(newValue, startDate, isDateUnavailable);\n      if (!newValue) {\n        return;\n      }\n\n      // The display calendar should not have any effect on the emitted value.\n      // Emit dates in the same calendar as the original value, if any, otherwise gregorian.\n      newValue = toCalendar(newValue, value?.calendar || new GregorianCalendar());\n\n      // Preserve time if the input value had one.\n      if (value && 'hour' in value) {\n        setControlledValue(value.set(newValue));\n      } else {\n        setControlledValue(newValue);\n      }\n    }\n  }\n\n  let isUnavailable = useMemo(() => {\n    if (!calendarDateValue) {\n      return false;\n    }\n\n    if (isDateUnavailable && isDateUnavailable(calendarDateValue)) {\n      return true;\n    }\n\n    return isInvalid(calendarDateValue, minValue, maxValue);\n  }, [calendarDateValue, isDateUnavailable, minValue, maxValue]);\n  let validationState = props.validationState || (isUnavailable ? 'invalid' : null);\n\n  return {\n    isDisabled: props.isDisabled,\n    isReadOnly: props.isReadOnly,\n    value: calendarDateValue,\n    setValue,\n    visibleRange: {\n      start: startDate,\n      end: endDate\n    },\n    minValue,\n    maxValue,\n    focusedDate,\n    timeZone,\n    validationState,\n    setFocusedDate(date) {\n      focusCell(date);\n      setFocused(true);\n    },\n    focusNextDay() {\n      focusCell(focusedDate.add({days: 1}));\n    },\n    focusPreviousDay() {\n      focusCell(focusedDate.subtract({days: 1}));\n    },\n    focusNextRow() {\n      if (visibleDuration.days) {\n        this.focusNextPage();\n      } else if (visibleDuration.weeks || visibleDuration.months || visibleDuration.years) {\n        focusCell(focusedDate.add({weeks: 1}));\n      }\n    },\n    focusPreviousRow() {\n      if (visibleDuration.days) {\n        this.focusPreviousPage();\n      } else if (visibleDuration.weeks || visibleDuration.months || visibleDuration.years) {\n        focusCell(focusedDate.subtract({weeks: 1}));\n      }\n    },\n    focusNextPage() {\n      let start = startDate.add(visibleDuration);\n      setFocusedDate(constrainValue(focusedDate.add(visibleDuration), minValue, maxValue));\n      setStartDate(\n        alignStart(\n          constrainStart(focusedDate, start, visibleDuration, locale, minValue, maxValue),\n          visibleDuration,\n          locale\n        )\n      );\n    },\n    focusPreviousPage() {\n      let start = startDate.subtract(visibleDuration);\n      setFocusedDate(constrainValue(focusedDate.subtract(visibleDuration), minValue, maxValue));\n      setStartDate(\n        alignStart(\n          constrainStart(focusedDate, start, visibleDuration, locale, minValue, maxValue),\n          visibleDuration,\n          locale\n        )\n      );\n    },\n    focusSectionStart() {\n      if (visibleDuration.days) {\n        focusCell(startDate);\n      } else if (visibleDuration.weeks) {\n        focusCell(startOfWeek(focusedDate, locale));\n      } else if (visibleDuration.months || visibleDuration.years) {\n        focusCell(startOfMonth(focusedDate));\n      }\n    },\n    focusSectionEnd() {\n      if (visibleDuration.days) {\n        focusCell(endDate);\n      } else if (visibleDuration.weeks) {\n        focusCell(endOfWeek(focusedDate, locale));\n      } else if (visibleDuration.months || visibleDuration.years) {\n        focusCell(endOfMonth(focusedDate));\n      }\n    },\n    focusNextSection(larger) {\n      if (!larger && !visibleDuration.days) {\n        focusCell(focusedDate.add(unitDuration(visibleDuration)));\n        return;\n      }\n\n      if (visibleDuration.days) {\n        this.focusNextPage();\n      } else if (visibleDuration.weeks) {\n        focusCell(focusedDate.add({months: 1}));\n      } else if (visibleDuration.months || visibleDuration.years) {\n        focusCell(focusedDate.add({years: 1}));\n      }\n    },\n    focusPreviousSection(larger) {\n      if (!larger && !visibleDuration.days) {\n        focusCell(focusedDate.subtract(unitDuration(visibleDuration)));\n        return;\n      }\n\n      if (visibleDuration.days) {\n        this.focusPreviousPage();\n      } else if (visibleDuration.weeks) {\n        focusCell(focusedDate.subtract({months: 1}));\n      } else if (visibleDuration.months || visibleDuration.years) {\n        focusCell(focusedDate.subtract({years: 1}));\n      }\n    },\n    selectFocusedDate() {\n      setValue(focusedDate);\n    },\n    selectDate(date) {\n      setValue(date);\n    },\n    isFocused,\n    setFocused,\n    isInvalid(date) {\n      return isInvalid(date, minValue, maxValue);\n    },\n    isSelected(date) {\n      return calendarDateValue != null && isSameDay(date, calendarDateValue) && !this.isCellDisabled(date) && !this.isCellUnavailable(date);\n    },\n    isCellFocused(date) {\n      return isFocused && focusedDate && isSameDay(date, focusedDate);\n    },\n    isCellDisabled(date) {\n      return props.isDisabled || date.compare(startDate) < 0 || date.compare(endDate) > 0 || this.isInvalid(date, minValue, maxValue);\n    },\n    isCellUnavailable(date) {\n      return props.isDateUnavailable && props.isDateUnavailable(date);\n    },\n    isPreviousVisibleRangeInvalid() {\n      let prev = startDate.subtract({days: 1});\n      return isSameDay(prev, startDate) || this.isInvalid(prev, minValue, maxValue);\n    },\n    isNextVisibleRangeInvalid() {\n      // Adding may return the same date if we reached the end of time\n      // according to the calendar system (e.g. 9999-12-31).\n      let next = endDate.add({days: 1});\n      return isSameDay(next, endDate) || this.isInvalid(next, minValue, maxValue);\n    },\n    getDatesInWeek(weekIndex, from = startDate) {\n      // let date = startOfWeek(from, locale);\n      let date = from.add({weeks: weekIndex});\n      let dates = [];\n\n      date = startOfWeek(date, locale);\n\n      // startOfWeek will clamp dates within the calendar system's valid range, which may\n      // start in the middle of a week. In this case, add null placeholders.\n      let dayOfWeek = getDayOfWeek(date, locale);\n      for (let i = 0; i < dayOfWeek; i++) {\n        dates.push(null);\n      }\n\n      while (dates.length < 7) {\n        dates.push(date);\n        let nextDate = date.add({days: 1});\n        if (isSameDay(date, nextDate)) {\n          // If the next day is the same, we have hit the end of the calendar system.\n          break;\n        }\n        date = nextDate;\n      }\n\n      // Add null placeholders if at the end of the calendar system.\n      while (dates.length < 7) {\n        dates.push(null);\n      }\n\n      return dates;\n    }\n  };\n}\n\nfunction unitDuration(duration: DateDuration) {\n  let unit = {...duration};\n  for (let key in duration) {\n    unit[key] = 1;\n  }\n  return unit;\n}\n","import React from 'react';\nimport { CalendarToolbar } from '../../components';\nimport { useCalendar } from './useCalendar';\nimport { Outlet } from 'react-router-dom';\n\n const CalendarPage = () => {\n  const {\n    calendarProps,\n    title,\n    prevButtonProps,\n    nextButtonProps,\n    state,\n    daysOfWeekLabels,\n    dateFormatter,\n  } = useCalendar();\n\n  const properties = { state, calendarProps, daysOfWeekLabels, dateFormatter };\n\n  return (\n    <div>\n      <CalendarToolbar {...{ title, prevButtonProps, nextButtonProps }} />\n\n      <Outlet context={properties} />\n    </div>\n  );\n};\n\nexport default CalendarPage\n","import { useCalendarState } from 'react-stately';\nimport { useCalendar as useCalendarAria } from 'react-aria';\nimport { createCalendar } from '@internationalized/date';\nimport { getDaysOfWeekLabels, getStringFromDate } from '../../../utils';\nimport {\n  useCurrentDate,\n  getMonthEvents, //eslint-disable-line\n  useCurrentMonth,\n  selectUserLoading,\n} from '../../../redux';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { parseDate } from '@internationalized/date';\nimport * as moment from 'moment';\n\nexport const useCalendar = () => {\n  // const { locale } = useLocale();\n  const locale = 'en-US';\n  const { currentDay: currentDayParam } = useParams();\n\n  const [currentDate, setCurrentDate] = useCurrentDate();\n  const [currentMonth, setCurrentMonth] = useCurrentMonth();\n  const isLoading = useSelector(selectUserLoading);\n\n  const dispatch = useDispatch(); //eslint-disable-line\n\n  const { year, month } = currentMonth ?? {}; //eslint-disable-line\n\n  const state = useCalendarState({\n    onChange: setCurrentDate,\n    value: currentDate,\n    locale,\n    createCalendar,\n    // visibleDuration\n  });\n\n  // useEffect(() => {\n  //   if (!currentMonth) return;\n\n  //   dispatch(getMonthEvents());\n  // }, [year, month]); //eslint-disable-line\n\n  useEffect(() => {\n    if (isLoading || currentDate) return;\n    const date_key = (() => {\n      if (currentDayParam) return currentDayParam;\n\n      return getStringFromDate(new Date()); // ex: 2020-02-03\n    })();\n\n    const calendarDate = parseDate(date_key);\n\n    setCurrentDate(calendarDate);\n    state.selectDate(calendarDate);\n\n    const date = calendarDate.toDate();\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n\n    setCurrentMonth({\n      year,\n      month,\n    });\n  }, [isLoading, currentDayParam, currentDate]); //eslint-disable-line\n\n  const dateFormatter = new Intl.DateTimeFormat(locale, { weekday: 'long' });\n  const { daysOfWeekLabels } = getDaysOfWeekLabels({ dateFormatter });\n\n  const {\n    calendarProps,\n    prevButtonProps: {\n      isDisabled: isDisabled1,\n      onPress: prevOnClick,\n      ...prevButtonProps\n    },\n    nextButtonProps: {\n      isDisabled: isDisabled2,\n      onPress: nextOnClick,\n      ...nextButtonProps\n    },\n  } = useCalendarAria({}, state);\n\n  Object.assign(prevButtonProps, {\n    onClick: prevOnClick,\n    disabled: isDisabled1 === 'true',\n  });\n\n  Object.assign(nextButtonProps, {\n    onClick: nextOnClick,\n    disabled: isDisabled2 === 'true',\n  });\n\n  const title = !currentMonth\n    ? ''\n    : `${moment().set('month', month).format('MMM')} ${year}`;\n\n  return {\n    title,\n    calendarProps,\n    prevButtonProps,\n    nextButtonProps,\n    state,\n    daysOfWeekLabels,\n    dateFormatter,\n  };\n};\n"],"names":["$458b0a5536c1a7cf$export$40bfa8c7b0832715","value","defaultValue","onChange","useState","stateValue","setStateValue","ref","useRef","undefined","wasControlled","current","isControlled","stateRef","console","warn","setValue","useCallback","args","onChangeCaller","onChangeArgs","Object","is","oldValue","functionArgs","interceptedValue","$f62d864046160412$export$eac50920cf2fd59a","date","minValue","maxValue","compare","$f62d864046160412$export$f4a51ff076cc9a09","duration","locale","halfDuration","key","Math","floor","$f62d864046160412$export$5bb865b12696a77d","$f62d864046160412$export$144a00ba6044eb9","subtract","aligned","years","months","weeks","$f62d864046160412$export$530edbfc915b2b04","d","days","$f62d864046160412$export$4f5203c0d889109e","$f62d864046160412$export$a1d3911297b952d7","isDateUnavailable","$131cf43a05231e1e$export$6d095e787d2b5e1f","props","defaultFormatter","useMemo","resolvedOptions","createCalendar","visibleDuration","selectionAlignment","calendar","setControlledValue","calendarDateValue","timeZone","focusedValue","defaultFocusedValue","onFocusChange","focusedDate","setFocusedDate","startDate","setStartDate","autoFocus","isFocused","setFocused","endDate","add","lastCalendarIdentifier","identifier","newFocusedDate","focusCell","newValue","isDisabled","isReadOnly","set","isUnavailable","validationState","visibleRange","start","end","focusNextDay","focusPreviousDay","focusNextRow","this","focusNextPage","focusPreviousRow","focusPreviousPage","focusSectionStart","focusSectionEnd","focusNextSection","larger","$131cf43a05231e1e$var$unitDuration","focusPreviousSection","selectFocusedDate","selectDate","isInvalid","isSelected","isCellDisabled","isCellUnavailable","isCellFocused","isPreviousVisibleRangeInvalid","prev","isNextVisibleRangeInvalid","next","getDatesInWeek","weekIndex","dates","dayOfWeek","i","push","length","nextDate","unit","currentDayParam","useParams","currentDay","useCurrentDate","currentDate","setCurrentDate","useCurrentMonth","currentMonth","setCurrentMonth","isLoading","useSelector","selectUserLoading","useDispatch","year","month","state","useCalendarState","useEffect","date_key","getStringFromDate","Date","calendarDate","parseDate","toDate","getFullYear","getMonth","dateFormatter","Intl","DateTimeFormat","weekday","daysOfWeekLabels","getDaysOfWeekLabels","useCalendarAria","calendarProps","prevButtonProps","isDisabled1","prevOnClick","onPress","nextButtonProps","isDisabled2","nextOnClick","assign","onClick","disabled","title","moment","format","useCalendar","properties","context"],"sourceRoot":""}